/*grid*/ 

.row {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -15px;
  margin-left: -15px;
}

.no-gutters {
  margin-right: 0;
  margin-left: 0;
}

.no-gutters > .col,
.no-gutters > [class*="col-"] {
  padding-right: 0;
  padding-left: 0;
}

.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col,
.col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm,
.col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md,
.col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg,
.col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl,
.col-xl-auto {
  position: relative;
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
}

.col {
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -ms-flex-positive: 1;
  flex-grow: 1;
  max-width: 100%;
}

// .row-cols-1 > * {
//   -ms-flex: 0 0 100%;
//   flex: 0 0 100%;
//   max-width: 100%;
// }

// .row-cols-2 > * {
//   -ms-flex: 0 0 50%;
//   flex: 0 0 50%;
//   max-width: 50%;
// }

// .row-cols-3 > * {
//   -ms-flex: 0 0 33.333333%;
//   flex: 0 0 33.333333%;
//   max-width: 33.333333%;
// }

// .row-cols-4 > * {
//   -ms-flex: 0 0 25%;
//   flex: 0 0 25%;
//   max-width: 25%;
// }

// .row-cols-5 > * {
//   -ms-flex: 0 0 20%;
//   flex: 0 0 20%;
//   max-width: 20%;
// }

// .row-cols-6 > * {
//   -ms-flex: 0 0 16.666667%;
//   flex: 0 0 16.666667%;
//   max-width: 16.666667%;
// }

.col-auto {
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: auto;
  max-width: 100%;
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);
      .col#{$infix}-1  { 
        -ms-flex: 0 0 ($col * 1);
        flex:0 0 ($col * 1);
        max-width:($col * 1);       
      }
      .col#{$infix}-2  {
        -ms-flex: 0 0 ($col * 2);
        flex:0 0 ($col * 2); 
        max-width:($col * 2);  
      }
      .col#{$infix}-3  { 
        -ms-flex: 0 0 ($col * 3);
        flex:0 0 ($col * 3);
        max-width:($col * 3)  
      }
      .col#{$infix}-4  { 
        -ms-flex: 0 0 ($col * 4);
        flex:0 0 ($col * 4);
        max-width:($col * 4)  
      }
      .col#{$infix}-5  { 
        -ms-flex: 0 0 ($col * 5);
        flex:0 0 ($col * 5);
        max-width:($col * 5)  
      }
      .col#{$infix}-6  { 
        -ms-flex: 0 0 ($col * 6);
        flex:0 0 ($col * 6);
        max-width:($col * 6)  
      }
      .col#{$infix}-7  { 
        -ms-flex: 0 0 ($col * 7);
        flex:0 0 ($col * 7);
        max-width:($col * 7)  
      }
      .col#{$infix}-8  { 
        -ms-flex: 0 0 ($col * 8);
        flex:0 0 ($col * 8);
        max-width:($col * 8)  
      }
      .col#{$infix}-9  { 
        -ms-flex: 0 0 ($col * 9);
        flex:0 0 ($col * 9);
        max-width:($col * 9)  
      }
      .col#{$infix}-10 { 
        -ms-flex: 0 0 ($col * 10);
        flex:0 0 ($col * 10);
        max-width:($col * 10) 
      }
      .col#{$infix}-11 { 
        -ms-flex: 0 0 ($col * 11);
        flex:0 0 ($col * 11);
        max-width:($col * 11) 
      }
      .col#{$infix}-12 { 
        -ms-flex: 0 0 ($col * 12);
        flex:0 0 ($col * 12);
        max-width:($col * 12) 
      }
  }
}


/* col */

// @mixin make-col($size, $columns: $grid-columns) {
//   flex: 0 0 percentage($size / $columns);
//   // Add a `max-width` to ensure content within each column does not blow out
//   // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
//   // do not appear to require this.
//   max-width: percentage($size / $columns);
// }